---
name: Release Binaries

"on":
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-release:
    name: Build ${{ matrix.artifact_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: rustygate-linux-amd64
            sha_cmd: sha256sum
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            artifact_name: rustygate-linux-arm64
            sha_cmd: sha256sum
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: rustygate-darwin-amd64
            sha_cmd: "shasum -a 256"
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: rustygate-darwin-arm64
            sha_cmd: "shasum -a 256"

    steps:
      - uses: actions/checkout@v4

      - name: Build with Cross
        if: runner.os == 'Linux'
        uses: houseabsolute/actions-rust-cross@v0.0.15
        with:
          target: ${{ matrix.target }}
          args: "--release"
          strip: true

      - name: Install Rust (macOS)
        if: runner.os == 'macOS'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            cp target/${{ matrix.target }}/release/main ${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/main ${{ matrix.artifact_name }}
          fi

      - name: Generate SHA256
        run: |
          ${{ matrix.sha_cmd }} ${{ matrix.artifact_name }} > \
            ${{ matrix.artifact_name }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.artifact_name }}
            ${{ matrix.artifact_name }}.sha256

  create-release:
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/rustygate-*
          generate_release_notes: true
